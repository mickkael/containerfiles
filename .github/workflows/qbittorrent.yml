# Create and publish a Container image

on:
  workflow_dispatch:
    inputs:
      versionlt:
        description: 'version libTorrent'
        required: true
        default: 'latest'
      versionqb:
        description: 'version'
        required: true
        default: 'latest'
  schedule: 
    - cron: '0 2 * * 0'

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Image name
        id: image_name
        run: |
          FILENAME="${{ github.workflow }}"
          echo "name=$(basename -- ${FILENAME%.yml})" >> "$GITHUB_OUTPUT"
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: set libtorrent version
        id: libtorrent_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.versionlt }}" == "latest" ]] || [[ "${{ github.event_name }}" == "schedule" ]]; then
            version_libtorrent=$(curl -s https://api.github.com/repos/arvidn/libtorrent/releases/latest | jq -r .tag_name | sed 's/^v//')
            echo "version_libtorrent=${version_libtorrent}" >> "$GITHUB_OUTPUT"
          else
            version_libtorrent=${{ github.event.inputs.versionlt }}
            echo "version_libtorrent=${version_libtorrent}" >> "$GITHUB_OUTPUT"
          fi
          
      - name: Get latest qbittorrent version
        id: qbittorrent_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.versionqb }}" == "latest" ]] || [[ "${{ github.event_name }}" == "schedule" ]]; then
            version_qbittorrent=$(curl -s https://api.github.com/repos/qbittorrent/qBittorrent/tags | jq -r '.[0].name' | sed 's/^release-//')
            echo "version_qbittorrent=${version_qbittorrent}" >> "$GITHUB_OUTPUT"
          else
            version_qbittorrent=${{ github.event.inputs.versionqb }}
            echo "version_qbittorrent=${version_qbittorrent}" >> "$GITHUB_OUTPUT"
          fi
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ steps.image_name.outputs.name }}
          tags: |
            type=raw,value="${{ steps.qbittorrent_version.outputs.version_qbittorrent }}.${{ steps.libtorrent_version.outputs.version_libtorrent }}.$(date +'%Y%m%d')"
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ steps.image_name.outputs.name }}
          file: ./${{ steps.image_name.outputs.name }}/Containerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSIONLT=${{ steps.libtorrent_version.outputs.version_libtorrent }}
            VERSIONQB=${{ steps.qbittorrent_version.outputs.version_qbittorrent }}
